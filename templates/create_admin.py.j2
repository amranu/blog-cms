#!/usr/bin/env python3
"""
Script to create an admin user for the Blog CMS.
Run this script after deployment to set up the initial admin account.

For Docker deployment, run this inside the flask-api container:
docker compose exec flask-api python /app/create_admin.py
"""

import sys
import os
import getpass

# For Docker deployment, the script should be copied to the container
try:
    from api import app, db
    from models.user import User
    from werkzeug.security import generate_password_hash
except ImportError:
    # Add the flask-api directory to the Python path for local execution
    sys.path.insert(0, '{{ deploy_dir }}/flask-api')
    from api import app, db
    from models.user import User
    from werkzeug.security import generate_password_hash

def create_admin_user():
    """Create an admin user interactively."""
    
    with app.app_context():
        print("=== Blog CMS Admin User Creation ===")
        print()
        
        username = input("Enter admin username: ").strip()
        if not username:
            print("Username cannot be empty!")
            return False
            
        email = input("Enter admin email: ").strip()
        if not email:
            print("Email cannot be empty!")
            return False
            
        # Check if user already exists
        existing_user = User.query.filter((User.username == username) | (User.email == email)).first()
        if existing_user:
            print(f"User with username '{username}' or email '{email}' already exists!")
            return False
            
        password = getpass.getpass("Enter admin password: ")
        if len(password) < 8:
            print("Password must be at least 8 characters long!")
            return False
            
        password_confirm = getpass.getpass("Confirm admin password: ")
        if password != password_confirm:
            print("Passwords do not match!")
            return False
        
        try:
            # Create admin user
            admin_user = User(
                username=username,
                email=email,
                password=generate_password_hash(password),
                firstname='Admin',
                lastname='User',
                is_admin=True
            )
            
            db.session.add(admin_user)
            db.session.commit()
            
            print(f"✅ Admin user '{username}' created successfully!")
            print(f"   Email: {email}")
            print(f"   Role: admin")
            print()
            print("You can now log in to the Blog CMS with these credentials.")
            return True
            
        except Exception as e:
            db.session.rollback()
            print(f"❌ Error creating admin user: {e}")
            return False

if __name__ == "__main__":
    if create_admin_user():
        sys.exit(0)
    else:
        sys.exit(1)